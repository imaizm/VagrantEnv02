# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

	config.vm.box = "relativkreativ/centos-7-minimal"

	config.vm.network :private_network, ip:"192.168.33.10"
	config.vm.hostname = "localhost"

	config.vm.network :forwarded_port, guest: 80, host: 10080 # http
	config.vm.network :forwarded_port, guest: 8080, host: 8080 # http
	config.vm.network :forwarded_port, guest: 8081, host: 8081 # http
	config.vm.network :forwarded_port, guest: 8082, host: 8082 # http
	config.vm.network :forwarded_port, guest: 8083, host: 8083 # http
	config.vm.network :forwarded_port, guest: 8084, host: 8084 # http
	config.vm.network :forwarded_port, guest: 8085, host: 8085 # http
	config.vm.network :forwarded_port, guest: 8086, host: 8086 # http
	config.vm.network :forwarded_port, guest: 8087, host: 8087 # http
	config.vm.network :forwarded_port, guest: 8088, host: 8088 # http
	config.vm.network :forwarded_port, guest: 8089, host: 8089 # http
	config.vm.network :forwarded_port, guest: 9418, host: 9418 # git

	config.vm.synced_folder ".", "/vagrant", :create => true, :owner => 'vagrant', :group => 'vagrant', :mount_options => ['dmode=777', 'fmode=600']
	config.vm.synced_folder "../../src", "/var/www/src", :create => true, :owner => 'vagrant', :group => 'vagrant', :mount_options => ['dmode=777', 'fmode=666']
	config.vm.synced_folder "../../ansible", "/var/ansible", :create => true, :owner => 'vagrant', :group => 'vagrant', :mount_options => ['dmode=777', 'fmode=666']

	config.ssh.forward_x11 = true

	config.vm.provision "ansible_local" do |ansible|
#		ansible.playbook = "playbook_sandbox.yml"
#		ansible.playbook = "playbook_docker-subversion.yml"
#		ansible.playbook = "playbook_docker-gitlab.yml"
#		ansible.playbook = "playbook_docker-redmine.yml"
#		ansible.playbook = "playbook_docker-firefox-vnc.yml"
#		ansible.playbook = "playbook_docker-nginx.yml"
#		ansible.playbook = "playbook_docker-elasticsearch.yml"
#		ansible.playbook = "playbook_elasticsearch.yml"
#		ansible.playbook = "playbook_php-pico.yml"
		ansible.playbook = "playbook_bootstrap-sass-build.yml"
		ansible.provisioning_path = "/var/ansible"
		ansible.install = true
		ansible.verbose = false
		
		ansible.inventory_path = "/vagrant/hosts"
		ansible.limit = "all"
	end

end
